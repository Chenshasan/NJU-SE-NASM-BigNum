%include        'func.nasm'SECTION .datamsg1  db    'Please enter x and y: ', 0Ah      ; message string asking user for inputinput times 100 db 0str1  times 50  db 0str2  times 50  db 0stres times 100 db 0SECTION .bssSECTION .textglobal  _start _start:    mov     eax, msg1    call    sprint    mov     edx, 255        ; number of bytes to read    mov     ecx, input      ; reserved space to store our input (known as a buffer)    mov     ebx, 0          ; write to the STDIN file    mov     eax, 3          ; invoke SYS_READ (kernel opcode 3)    int     80h    mov     eax, 0    push    eax    mov     eax, input    mov     ebx, str1    inc     ebx    mov     edx, str1    mov     byte [edx], 43split:    cmp     byte [eax], 10    je      .poploop.pushloop:    movzx   ecx, byte [eax]         push    ecx    inc     eax    jmp     split.poploop:    pop     ecx    cmp     ecx, 0    je      toadd    cmp     ecx, 45    jne     .nextcmp    mov     byte[edx], 45    jmp     .poploop.nextcmp:    cmp     ecx, 32    jne     .next    mov     ebx, str2    inc     ebx    mov     edx, str2    mov     byte [edx], 43    pop     ecx.next:    sub     cl, 48    mov     byte [ebx], cl    inc     ebx    jmp     .poplooptoadd:    mov     eax, 0    cmp     byte [str1], 45    jne     .nextcmp1.nextcmp1:    call    sprint    call    quit    